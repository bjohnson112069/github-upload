/* --------------------- */
/* Custom Properties     */
/* --------------------- */

:root {
     /* colors */
     --clr-background: 0 0% 0%;
     --clr-accent: 50 100% 50%;
     --clr-text: 0 0% 100%;
     /* font-sizes: Mobile */
     --fs-900: clamp(5rem, 8vw + 1rem, 9.375rem);
     --fs-800: 3.5rem;
     --fs-700: 1.5rem;
     --fs-600: 1rem;
     --fs-500: 1rem;
     --fs-400: 0.9375rem;
     --fs-300: 1rem;
     --fs-200: 0.875rem;

     /* font-families */
     --ff-body: "Lato", sans-serif;
     --ff-header: "Montserrat", sans-serif;

     /* custom properties */
     --scroll: 0;
}

/* Tablet 560px */
@media (min-width: 35em) {
     :root {
          /* font-sizes: Tablet */
          --fs-800: 5rem;
          --fs-700: 2.5rem;
          --fs-600: 1.5rem;
          --fs-400: 1rem;
          --fs-500: 1.25rem;
     }
}
/* large Sizes */
@media (min-width: 45em) {
     :root {
          /* font-sizes: Desktop */
          --fs-800: 6.25rem;
          --fs-700: clamp(2rem, 3vw + 1rem, 3.5rem);
          /* --fs-700: 3.5rem; */
          --fs-600: 2rem;
          --fs-500: 1.75rem;
          --fs-400: 1.125rem;
     }
}

/* --------------------- */
/* Reset                 */
/* --------------------- */

/* Variation of the following modern CSS reset https://piccalil.li/blog/a-modern-css-reset/ */

/* Box Sizing */
*,
*::before,
*::after {
     box-sizing: border-box;
}

/* Reset margins */
body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
figure,
picture {
     margin: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
     font-family: var(--ff-header);
     font-weight: 900;
}

/* set up the body */
body {
     font-family: var(--ff-body);
     font-size: var(--fs-400);
     font-weight: 400;
     background-color: hsl(var(--clr-background));
     /* color: hsl(var(--clr-white)); */
     color: hsl(var(--clr-text));
     line-height: 1.5;
     min-height: 100vh;

     display: grid;
     /* stretch header and main-content to fit the min-height*/
     grid-template-rows: min-content 1fr;

     /* prevent side-scrolling for animations */
     overflow-x: hidden;
}

/* make images easier to work with */
img,
picture {
     max-width: 100%;
     /* display: block overrides default behavior of hidden attribute for picture element */
     /* display: block; */
}

/* make form elements easier to work with */
input,
button,
textarea,
select {
     font: inherit;
}

[hidden] {
     display: none;
}

/* remove animations for people who've turned them off */
@media (prefers-reduced-motion: reduce) {
     *,
     *::before,
     *::after {
          animation-duration: 0.01ms !important;
          animation-iteration-count: 1 !important;
          transition-duration: 0.01ms !important;
          scroll-behavior: auto !important;
     }
}

/* --------------------- */
/* Utility Classes       */
/* --------------------- */

/* general */

.flex {
     display: flex;
     gap: var(--gap, 1rem);
     /* outline: 3px solid red; */
}

.flex--col {
     flex-direction: column;
}

.flex--center {
     justify-content: center;
     align-items: center;
}

.grid {
     display: grid;
     gap: var(--gap, 1rem);
}

.grid--center {
     place-items: center;
}


.outline {
     outline: 1px solid red;
}
   
.outline-children > * {
     outline: 1px solid purple;
}

.d-block {
     display: block;
}

/* select all adjacent siblings that come before it; select all but 1st child */
/* "> * + *" */
/* "> *:not(:first-child)" has specificity problems */
/* "> *:where(:not(:first-child))" where does not add any specificity so you can overwrite*/
.flow > *:where(:not(:first-child)) {
     margin-top: var(--flow-space, 1rem);
     /* outline: 1px solid red; */
}

.flow--space-small {
     --flow-space: 0.75rem;
}

.container {
     padding: 2em; /* new property left/right */
     margin-inline: auto; /* new property left/right */
     max-width: 80rem;
     height: 100%;
}

/* screen reader only; keeps it in the DOM but is not visible */
.sr-only {
     position: absolute;
     width: 1px;
     height: 1px;
     padding: 0;
     margin: -1px;
     overflow: hidden;
     clip: rect(0, 0, 0, 0);
     white-space: nowrap; /* added line */
     border: 0;
}

/* colors */


/* typography */

.letter-spacing-1 {
     letter-spacing: 4.75px;
}
.letter-spacing-2 {
     letter-spacing: 2.7px;
}
.letter-spacing-3 {
     letter-spacing: 2.35px;
}

.uppercase {
     text-transform: uppercase;
}

.fs-900 {
     font-size: var(--fs-900);
}
.fs-800 {
     font-size: var(--fs-800);
}
.fs-700 {
     font-size: var(--fs-700);
}
.fs-600 {
     font-size: var(--fs-600);
}
.fs-500 {
     font-size: var(--fs-500);
}
.fs-400 {
     font-size: var(--fs-400);
}
.fs-300 {
     font-size: var(--fs-300);
}
.fs-200 {
     font-size: var(--fs-200);
}

.fs-900,
.fs-800,
.fs-700,
.fs-600 {
     line-height: 1.1;
}

/* --------------------- */
/* Features              */
/* --------------------- */
.fade-in {
     opacity: 0;
     transition: opacity 1000ms ease-in;
}

.fade-in.appear {
     opacity: 1;
}

.slide-left {
     transform: translateX(-50%);
}

.slide-right {
     transform: translateX(100%);
}

.slide-up {
     transform: translateY(-100%);
}

.slide-down {
     /* transform: translateX(-50%); */
     /* transform: translateY(100%); */
}


.slide-up,
.slide-down {
     transition: transform 500ms ease-in, opacity 500ms ease-in;
     opacity: 0;
}

.slide-left,
.slide-right
{
     /* opacity: 0; */
}

.slide-left.appear,
.slide-right.appear {
     /* transform: translateX(0); */
     transform: translateX(calc(var(--scrollDirection) * 4%));
     opacity: 1;
}

.slide-down.appear {
     /* translate: 0% 100%;
     transform: translate(0%, 0%); */
     animation: slideUp 750ms ease-in-out;
     opacity: 1;
     /* transform: translateY(0); */
}

@keyframes slideUp {
     0% {
          transform: translateY(100%);
     }

     100% {
          transform: translateY(0);
     }
}

/* .slide-up.appear,
.slide-down.appear {
     transform: translateY(0);
     opacity: 1;
} */

/* --------------------- */
/* Components            */
/* --------------------- */

header, section {
     min-height: 100vh;
}

/* --------------------- */
/* Header                */
/* --------------------- */

header {
     background-color: hsla(var(--clr-background) / .8);
     background-image: url(./images/_8604fe55-f9e3-4402-8ab4-5d75326000f3.jpg);
     background-size: cover;
     background-blend-mode: multiply;
}

header, 
header .container {
     z-index: 0;
}

.hero--container {
     position: relative;
     background-color: hsla(var(--clr-text) / .2);
     z-index: -2;
}
.hero--container::before {
     content: "";
     position: absolute;
     width: 100%;
     height: 100%;
     top: -100%;
     left: 0;
     z-index: -1;
     outline: 1px solid hsl(var(--clr-accent));
}

.hero--container h1 {
     font-size: var(--fs-900);
     color: hsl(var(--clr-accent));
     -webkit-text-fill-color: transparent;
     -webkit-text-stroke: 1px;
     -webkit-text-stroke-color: inherit;
}

.show-text-fill {
    -webkit-text-fill-color: hsl(var(--clr-accent));
}

.hero--container h1, 
.hero--container p {
     text-transform: uppercase;
     z-index: 10;
}


/* --------------------- */
/* Section 1             */
/* --------------------- */


#section--1 .container {
     align-items: center;
     flex-wrap: wrap;
}

.panel {
     text-transform: uppercase;
}

.text--vertical {
     font-size: var(--fs-900);
     writing-mode: vertical-rl;
     text-orientation: upright;
     white-space: nowrap;
     letter-spacing: -75px;
}

.text--horizontal {
     font-size: var(--fs-700);
     flex: 1;
}



/* must include BOTH the property and the value */
@supports (backdrop-filter: blur(1.5rem)) {
     .primary-navigation {
          background-color: hsl(var(--clr-white) / 0.04);
          backdrop-filter: blur(1.5rem);
     }
}


/* override defaults for mobile using max-width */
@media (max-width: 35rem) {
 
}

@media (min-width: 35em) {
}

@media (min-width: 35em) and (max-width: 44.999em) {
}

@media (min-width: 45em) {
}
