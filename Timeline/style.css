@import url('https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap');
@import url("https://use.fontawesome.com/releases/v6.4.2/css/all.css");

:root {
    /* Colors */
    --clr-body-bg: #202020;
    --text: hsl(210, 42%, 15%);
    --background: hsl(0, 0%, 94%);
    --primary: hsl(210, 29%, 50%);
    --secondary: hsl(210, 60%, 75%);
    --accent: hsl(30, 80%, 54%);
    
    /* shades */
    --text-50: hsl(213, 44%, 95%);
    --text-100: hsl(209, 41%, 90%);
    --text-200: hsl(210, 41%, 80%);
    --text-300: hsl(210, 42%, 70%);
    --text-400: hsl(210, 42%, 60%);
    --text-500: hsl(210, 42%, 50%);
    --text-600: hsl(210, 42%, 40%);
    --text-700: hsl(210, 42%, 30%);
    --text-800: hsl(210, 41%, 20%);
    --text-900: hsl(211, 41%, 10%);
    --text-950: hsl(207, 44%, 5%);
    
    --background-50: hsl(0, 0%, 100%);
    --background-100: hsl(0, 0%, 90%);
    --background-200: hsl(0, 0%, 80%);
    --background-300: hsl(0, 0%, 70%);
    --background-400: hsl(0, 0%, 60%);
    --background-500: hsl(0, 0%, 50%);
    --background-600: hsl(0, 0%, 40%);
    --background-700: hsl(0, 0%, 30%);
    --background-800: hsl(0, 0%, 20%);
    --background-900: hsl(0, 0%, 10%);
    --background-950: hsl(0, 0%, 5%);
    
    --primary-50: hsl(214, 28%, 95%);
    --primary-100: hsl(208, 29%, 90%);
    --primary-200: hsl(210, 29%, 80%);
    --primary-300: hsl(211, 29%, 70%);
    --primary-400: hsl(210, 29%, 60%);
    --primary-500: hsl(210, 29%, 50%);
    --primary-600: hsl(210, 29%, 40%);
    --primary-700: hsl(211, 29%, 30%);
    --primary-800: hsl(210, 29%, 20%);
    --primary-900: hsl(212, 29%, 10%);
    --primary-950: hsl(206, 28%, 5%);
    
    --secondary-50: hsl(212, 60%, 95%);
    --secondary-100: hsl(211, 61%, 90%);
    --secondary-200: hsl(210, 61%, 80%);
    --secondary-300: hsl(210, 59%, 70%);
    --secondary-400: hsl(210, 60%, 60%);
    --secondary-500: hsl(210, 60%, 50%);
    --secondary-600: hsl(210, 60%, 40%);
    --secondary-700: hsl(210, 59%, 30%);
    --secondary-800: hsl(210, 61%, 20%);
    --secondary-900: hsl(211, 61%, 10%);
    --secondary-950: hsl(208, 60%, 5%);
    
    --accent-50: hsl(30, 77%, 95%);
    --accent-100: hsl(31, 80%, 90%);
    --accent-200: hsl(30, 80%, 80%);
    --accent-300: hsl(30, 80%, 70%);
    --accent-400: hsl(30, 80%, 60%);
    --accent-500: hsl(30, 80%, 50%);
    --accent-600: hsl(30, 80%, 40%);
    --accent-700: hsl(30, 80%, 30%);
    --accent-800: hsl(30, 80%, 20%);
    --accent-900: hsl(31, 80%, 10%);
    --accent-950: hsl(30, 77%, 5%);

    /* Gradients */

    /* Typography */
    --fs-1000: clamp(3rem, -0.0347rem + 12.9480vw, 10rem);
    --fs-900: 3.5rem;
    --fs-850: clamp(2rem, 1.82394366197183rem + 0.751173708920188vw, 2.5rem);
    --fs-800: 2rem;
    --fs-750: 1.875rem;
    --fs-750: clamp(1.5rem, 1.11270491803279rem + 0.983606557377049vw, 1.875rem);
    --fs-700: 1.75rem;
    --fs-650: 1.5rem;
    --fs-650: clamp(1rem, 0.483606557377049rem + 1.31147540983607vw, 1.5rem);
    --fs-600: 1.25rem;
    --fs-600: clamp(1rem, 0.741803278688525rem + 0.655737704918033vw, 1.25rem);
    --fs-500: 1.125rem;
    --fs-400: 1rem;
    --fs-300: .875rem;
    --fs-200: .75rem;
    --fs-100: clamp(0.625rem, 0.3365rem + 1.2308vw, 0.875rem);
    --ff-header: "Montserrat", sans-serif;
    --ff-body: "Lato", sans-serif;

    --border-radius: 6px;
    --gutter-width: 1rem;
    --container-width: 1440px;
    --max-width: 100%;
    --min-width: 375px;
}


*,
*::before,
*::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

* ul {
    list-style-type: none;
}

* ul a {
    color: inherit;
    text-decoration: none;
}

input,
button,
textarea,
select {
    font: inherit;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-family: var(--ff-header);
    line-height: 1.1;
}

button {
    outline: none;
    border: none;
    background: inherit;
    color: inherit;
    font-family: inherit;
    font-size: inherit;
    cursor: pointer;
}

input {
    outline: none;
    font-family: inherit;
    font-size: inherit;
    background: inherit;
    color: inherit;
}

select {
    /* for Firefox */
    -moz-appearance: none;
    /* for Chrome */
    -webkit-appearance: none;
}

  /* For IE10 */
select::-ms-expand {
    display: none;
}

body {
    line-height: 1.5;
    font-family: var(--ff-body);
    font-size: var(--fs-400);
    font-weight: 400;
    max-width: var(--max-width);
    min-width: var(--min-width);

    min-block-size: 100svh;
    margin: auto;
    display: grid;
    grid-template-columns: 
        minmax(var(--gutter-width), 1fr)
        min(100% - calc(2 * var(--gutter-width)), var(--container-width))
        minmax(var(--gutter-width), 1fr);
    align-items: center;

    background: var(--background);
    color: var(--text);
    position: relative;
}

.hidden {
    display: none;
}

.visually-hidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: auto;
    margin: 0;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
    white-space: nowrap;
}

.disable-scrolling {
    overflow-y: hidden;
}

/* --------------------- */

.slide-left {
    transform: translateX(-100vw);
}

.slide-right {
    transform: translateX(100vw);
}

.slide-up {
    transform: translateY(-100vh);
}

.slide-down {
    transform: translateY(100vh);
}

.scale-up {
    transform: scale(1.2);
}

.scale-down {
    transform: scale(0);
}

.rotate-25 {
    transform: rotateX(.25turn);
}

.scale,
.slide,
.rotate {
    transition: all 1.5s cubic-bezier(0.68, -0.55, 0.265, 1.35);
}

/* --------------------- */

.btn {
    border-radius: var(--border-radius);
    border: 2px solid var(--btn-border-color, transparent);
    background: var(--btn-bg-color);
    color: var(--btn-text-color);
    cursor: pointer;
    transition: color .5s cubic-bezier(0.4, 0, 0.2, 1), border .5s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: inset 2px 2px 4px -2px rgb(255, 255, 255, 0.8), inset -2px -2px 4px -2px rgb(0, 0, 0, 0.8);
    display: grid;
    place-items: center;
    position: relative;
    overflow: hidden;
    z-index: 1;
}

.btn::after {
    content: "";
    position: absolute;
    inset: 100%;
    background: var(--btn-hover-bg-color);
    transition: all .5s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: -1;
}

.btn:hover {
    color: var(--btn-hover-text-color, transparent);
    border-color: var(--btn-hover-border-color, transparent);
}

.btn:hover::after {
    inset: 0;
}

/* --------------------- */

body > * {
    grid-column: 2 / 3;
}

#experience {
    width: 100%;
    display: grid;
    grid-auto-rows: min-content;
    justify-items: center;
    gap: 3rem;
    padding: 1rem;
    border-radius: 1rem;
    background: var(--background);
    position: relative;
    overflow: hidden;
}

header {
    display: grid;
    grid-auto-rows: min-content;
    gap: .5rem;
    justify-items: center;
}

header > h1 {
    font-size: var(--fs-850);
    font-weight: 900;
    text-transform: uppercase;
    color: var(--accent);
    text-shadow: 2px 2px 2px var(--text);
}

header > p {
    max-width: 70ch;
}

header a {
    display: inline-block;
    text-decoration: none;
    color: var(--accent);
    position: relative;
}

header a::after {
    content: '';
    width: 0;
    height: 2px;
    background: var(--accent);
    position: absolute;
    top: 100%;
    left: 0;
    transition: width .5s ease-in-out;
}

header a:hover::after {
    width: 100%;
}

.timeline {
    --event-gap: 2rem;
    --timeline-gap: 4rem;
    display: grid;
    grid-auto-rows: min-content;
    gap: var(--timeline-gap);
}

.event {
    display: grid;
    align-items: center;
    gap: var(--event-gap);
    background: var(--background);
}

.event:nth-of-type(2n + 1) {
    grid-template-columns: 1fr min-content;
    grid-template-areas: "details icon";
}
.event:nth-of-type(2n) {
    grid-template-columns: min-content 1fr;
    grid-template-areas: "icon details";
}

.icon {
    --line-thickness: .5rem;
    grid-area: icon;
    width: 100%;
    height: 100%;
    display: grid;
    place-items: center;
    position: relative;
    z-index: 1;
}

.icon::before,
.icon::after {
    content: "";
    position: absolute;
    background: var(--accent);
    box-shadow:
        inset 2px 2px 4px -2px rgb(255, 255, 255, 0.8),
        inset -2px -2px 4px -2px rgb(0, 0, 0, 0.8);
    z-index: -1;
}

.icon::before {
    top: 50%;
    left: 0%;
    width: 0;
    height: var(--line-thickness);
    transform: translate(calc(-1 * var(--event-gap)), -50%);
    animation: fillHorizontal 2s forwards 2s ease-in-out;
}

.event:nth-child(2n) .icon::before {
    left: 50%;
    transform: translate(0%, -50%);
}

.icon::after {
    top: 50%;
    left: 50%;
    width: var(--line-thickness);
    height: 0;
    transform: translate(-50%, 0%);
}

.event:not(:last-of-type) .icon::after {
    animation: fillVertical 2s forwards 2s ease-in-out;
}

@keyframes fillHorizontal {
    100% {
        width: calc(50% + var(--event-gap));
    }
}

@keyframes fillVertical {
    100% {
        height: calc(50% + var(--timeline-gap));
    }
}

.sprite {
    aspect-ratio: 1;
    width: 5rem;
    display: grid;
    place-items: center;
    font-size: 2rem;
    border-radius: 50%;
    box-shadow:
        inset 2px 2px 4px -2px rgb(255, 255, 255, 0.8),
        inset -2px -2px 4px -2px rgb(0, 0, 0, 0.8),
        0px 5px 10px -2px rgb(0, 0, 0, 0.5);
    background: var(--accent);
    color: var(--background);
}

.details {
    grid-area: details;
    display: grid;
}

.event:nth-of-type(2n + 1) > .details {
    grid-template-columns: 1fr min-content;
    grid-template-areas: "content date";
}

.event:nth-of-type(2n) > .details {
    grid-template-columns: min-content 1fr;
    grid-template-areas: "date content";
}

.date {
    grid-area: date;
    min-width: max-content;
    font-weight: 900;
    padding: 1.25rem;
    width: 100%;
    height: 100%;
    display: grid;
    place-items: center;
    background-color: var(--text);
    color: var(--background);
    box-shadow:
        inset 2px 2px 4px -2px rgb(255, 255, 255, 0.8),
        inset -2px -2px 4px -2px rgb(0, 0, 0, 0.8),
        0px 5px 10px -2px rgb(0, 0, 0, 0.5);
}

.event:nth-of-type(2n + 1) .date {
    border-radius: 0 var(--border-radius) var(--border-radius) 0;
}

.event:nth-of-type(2n) .date {
    border-radius: var(--border-radius) 0 0 var(--border-radius);
}

.content {
    grid-area: content;
    padding: 1.25rem;
    background: var(--background-50);
    box-shadow:
    inset 2px 2px 4px -2px rgb(255, 255, 255, 0.8),
    inset -2px -2px 4px -2px rgb(0, 0, 0, 0.8),
    0px 5px 10px -2px rgb(0, 0, 0, 0.5);

}

.event:nth-of-type(2n + 1) .content {
    border-radius: var(--border-radius) 0 0 var(--border-radius);
}

.event:nth-of-type(2n) .content {
    border-radius: 0 var(--border-radius) var(--border-radius) 0;
}

.job-title,
.company-name,
.description {
    font-size: inherit;
    line-height: 1.5;
}

.job-title,
.company-name {
    text-transform: uppercase;
}

.job-title {
    font-weight: 700;
    color: hsl(var(--clr-secondary));
}

.company-name {
    font-size: var(--fs-300);
    font-weight: var(--fw-500);
}

.description {
    margin-top: 1rem;
    max-width: 70ch;
}


/* CSS styles for mobile devices */
@media (max-width: 800px) {
    header > h1 {
        max-width: 13ch;
        text-align: center;
    }

    .event:nth-of-type(n) {
        grid-template-columns: 1fr;
        grid-auto-rows: min-content;
        grid-template-areas: "icon"
        "details";
    }
    
    .event:nth-of-type(n) > .details {
        grid-template-columns: 1fr;
        grid-auto-rows: min-content;
        grid-template: "date"
        "content";
    }

    .event:nth-of-type(n) .date {
        border-radius: var(--border-radius) var(--border-radius) 0 0;
    }

    .event:nth-of-type(n) .content {
        border-radius: 0 0 var(--border-radius) var(--border-radius);
    }

    .event:nth-of-type(n) .icon::before {
        left: 50%;
        transform: translate(-50%, 0%);
        width: var(--line-thickness);
        height: 0;
        animation: mobileFillEventGap 2s forwards 2s ease-in-out;
    }

    .event:nth-of-type(n) .icon::after {
        top: 0;
        transform: translate(-50%, calc(-1 * var(--timeline-gap)));
        animation: mobileFillTimelineGap 2s forwards 2s ease-in-out;
    }

    .event:first-of-type .icon::after {
        animation: none;
    }
    
    @keyframes mobileFillEventGap {
        100% {
            height: calc(50% + var(--event-gap));
        }
    }

    @keyframes mobileFillTimelineGap {
        100% {
            height: calc(50% + var(--timeline-gap));
        }
    }
    .job-title,
    .company-name {
        /* text-align: center; */
    }
}


