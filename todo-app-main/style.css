/* --------------------- */
/* Custom Properties     */
/* --------------------- */

:root {
    /* colors */

    /* ### Primary */
    --clr-bright-blue: hsl(220, 98%, 61%);
    --clr-gradient-blue: hsl(192, 100%, 67%);
    --clr-gradient-purple: hsl(280, 87%, 65%);
    --clr-white: hsl(0, 0%, 100%);
    
    /* ### Light Theme */
    --clr-very-light-gray: hsl(0, 0%, 98%);
    --clr-very-light-grayish-blue: hsl(236, 33%, 92%);
    --clr-light-grayish-blue-1: hsl(233, 11%, 84%);
    --clr-dark-grayish-blue-1: hsl(236, 9%, 61%);
    --clr-very-dark-grayish-blue: hsl(235, 19%, 35%);
    
    /* ### Dark Theme */
    --clr-very-dark-blue: hsl(235, 21%, 11%);
    --clr-very-dark-desaturated-blue: hsl(235, 24%, 19%);
    --clr-light-grayish-blue-2: hsl(234, 39%, 85%);
    --clr-light-grayish-blue-hover: hsl(236, 33%, 92%);
    --clr-dark-grayish-blue-2: hsl(234, 11%, 52%);
    --clr-very-dark-grayish-blue-1: hsl(233, 14%, 35%);
    --clr-very-dark-grayish-blue-2: hsl(237, 14%, 26%);

    /* ### System Colors ### */

    /* ### THEME: DARK ### */
    /* --clr-bg--main: var(--clr-very-dark-blue, red);
    --clr-bg--form: var(--clr-very-dark-desaturated-blue, red);
    --clr-bg--list: var(--clr-very-dark-desaturated-blue, red);
    --clr-title--text: var(--clr-white, red);
    --clr-form--text: var(--clr-light-grayish-blue-2, red);
    --clr-form--placeholder: var(--clr-dark-grayish-blue-2, red);
    --clr-list--shadow: var(--clr-very-dark-blue, red);
    --clr-item--text: var(--clr-light-grayish-blue-2, red);
    --clr-item--completed: var(--clr-very-dark-grayish-blue-1, red);
    --clr-item--hover: var(--clr-light-grayish-blue-hover, red);
    --clr-active--text:  var(--clr-bright-blue, red);
    --clr-border: var(--clr-very-dark-grayish-blue-2, red);
    --clr-footer--text: var(--clr-very-dark-grayish-blue-1, red); */

    /* ### THEME: LIGHT ### */
    /* --clr-bg--main: var(--clr-very-light-gray, red);
    --clr-bg--form: var(--clr-white, red);
    --clr-bg--list: var(--clr-white, red);
    --clr-title--text: var(--clr-white, red);
    --clr-form--text: var(--clr-very-dark-grayish-blue, red);
    --clr-form--placeholder: var(--clr-dark-grayish-blue-1, red);
    --clr-list--shadow: var(--clr-very-light-grayish-blue, red);
    --clr-item--text: var(--clr-very-dark-grayish-blue, red);
    --clr-item--completed: var(--clr-light-grayish-blue-1, red);
    --clr-item--hover: var(--clr-dark-grayish-blue-1, red);
    --clr-active--text:  var(--clr-bright-blue, red);
    --clr-border: var(--clr-light-grayish-blue-1, red);
    --clr-footer--text: var(--clr-dark-grayish-blue-1, red); */

    /* font-sizes: Mobile */
    --fs-900: clamp(1.75rem, 1.1338rem + 2.6291vw, 3.5rem);
    --fs-800: clamp(1.5rem, 0.9718rem + 2.2535vw, 3rem);
    --fs-700: 1.95rem;
    /* --fs-600: 1.6rem; */
    --fs-600: 2.5rem;
    --fs-500: clamp(0.75rem, 0.6180rem + 0.5634vw, 1.125rem);;
    --fs-400: 1rem;
    /* --fs-300: .85rem; */
    --fs-300: .875rem;
    
    /* font-families */
    --ff-body: 'Josefin Sans', sans-serif;

    /* custom properties */
    --max-width: 1440px;
    --min-width: 375px;
    --image-height--desktop: 280px;
    --image-height--mobile: 300px;
    --border-radius: 5px;

}


/* --------------------- */
/* Reset                 */
/* --------------------- */

/* Variation of the following modern CSS reset https://andy-bell.co.uk/a-more-modern-css-reset// */
/* Box sizing rules */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Prevent font size inflation */
html {
    -moz-text-size-adjust: none;
    -webkit-text-size-adjust: none;
    text-size-adjust: none;
}

/* Remove default margin in favour of better control in authored CSS */
body, h1, h2, h3, h4, p,
figure, blockquote, dl, dd {
    margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
    list-style: none;
}

/* Set core body defaults */
body {
    line-height: 1.5;
    font-family: var(--ff-body);
    font-size: var(--fs-500);
    font-weight: 400;
    max-width: var(--max-width);
    min-width: var(--min-width);
    background-color: #202020;
    color: #3e52a3;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0;
    margin: auto;
}

/* Set shorter line heights on headings and interactive elements */
h1, h2, h3, h4,
button, input, label {
    line-height: 1.1;
}

/* Balance text wrapping on headings */
h1, h2,
h3, h4,
h5, h6 {
    text-wrap: balance;
    line-height: 1.1;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
    text-decoration-skip-ink: auto;
    color: currentColor;
}

/* Make images easier to work with */
img,
picture {
    max-width: 100%;
    display: block;
}

/* Inherit fonts for inputs and buttons */
input, button,
textarea, select {
    font: inherit;
}

/* Make sure textareas without a rows attribute are not tiny */
textarea:not([rows]) {
    min-height: 10em;
}

/* Anything that has been anchored to should have extra scroll margin */
:target {
    scroll-margin-block: 5ex;
}

/* --------------------- */
/* Utility Classes       */
/* --------------------- */

/* general */

.flex {
    display: flex;
    gap: var(--gap, 1rem);
}

.grid {
    display: grid;
    gap: var(--gap, 1rem);
}

.page--container {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0;
    margin: auto;
    /* --bg-image, --bg-fallbackare injected by Javascript */
    background: var(--clr-bg--main);
    background-image: var(--bg-image, var(--bg-fallback));
    background-repeat: no-repeat;
    background-position: center top;
}

.content--container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    gap: 1.5rem;
    padding-top: 3.825rem;
    padding-bottom: 2rem;
    width: min(540px, calc(100% - 3rem));
}

.content--container > * {
    width: 100%;
}

.flow > *:where(:not(:first-child)) {
    margin-top: var(--flow-space, 1rem);
}

.outline {
    outline: 1px solid red;
}

.outline-children > * {
    outline: 1px solid blue;
}

.attribution { font-size: 11px; text-align: center; }
.attribution a { color: hsl(228, 45%, 44%); }

/* default sytling for buttons */
button {
    padding: 0;
    margin: 0;
    outline: none;
    border: none;
    background: transparent;
    color: inherit;
    cursor: pointer;
}

.wrapper {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 1rem;
    width: 100%;
    padding: 1.15rem 1rem;
    position: relative; /* important */
    /* z-index must be greater than the pseudo element */
    z-index: 0;
}

.title {
    text-transform: uppercase;
    color: var(--clr-title--text);
    padding: .875rem 0;
}

.title > h1 {
    font-size: var(--fs-600);
    letter-spacing: 1rem;
}

.theme {
    aspect-ratio: 1 / 1;
    width: 26px;
    background-image: url(./images/icon-moon.svg);
    background-repeat: no-repeat;
    background-position: center center;
}

.theme:hover {
    transform: scale(1.5);
}

.theme[data-dark-mode="false"] {
    background-image: url(./images/icon-sun.svg);
}

form {
    background: var(--clr-bg--form);
    border-radius: var(--border-radius);
}

.input {
    width: 100%;
    border: none;
    outline: none;
    background: inherit;
    color: var(--clr-form--text);
}

.input::placeholder {
    color: var(--clr-form--placeholder);
}

/* container to hold the (ul) list and filter (footer) */
.list-container {
    display: flex;
    flex-direction: column;
    background: var(--clr-bg--list);
    border-radius: var(--border-radius);
    box-shadow: 0 1rem 1rem -5px var(--clr-list--shadow);
}
.list {
    margin: 0;
    padding: 0;
    width: 100%;
    background: inherit;
    border-radius: inherit;
    overflow: hidden;
}

.item {
    color: var(--clr-item--text);
    border-bottom: 1px solid var(--clr-border);
    background: inherit;
}

#checkbox {
    display:none;
}

#checkbox:checked + .circle {
    background-image: url(./images/icon-check.svg), linear-gradient(135deg, var(--clr-gradient-blue) 50%, var(--clr-gradient-purple) 100%);
    background-repeat: no-repeat;
    background-position: center center;
}

#checkbox:checked + .circle::after {
    background: linear-gradient(135deg, var(--clr-gradient-blue) 50%, var(--clr-gradient-purple) 100%); 
}

.circle {
    --border-width: 1px;
    aspect-ratio: 1 / 1;
    width: 26px;
    border-radius: 50%;
    position: relative;
    background: inherit;
    cursor: pointer;

    background-clip: padding-box; /* important */
    border: solid var(--border-width) transparent; /* important */
    /*  z-index must be auto on the parent */
}

.circle::after {
    content: "";
    position: absolute;
    inset: 0;
    margin: calc(-1 * var(--border-width));
    border-radius: inherit;
    background: var(--clr-border);
    /* z-index must be negative on the pseudo element */
    z-index: -1;
}

.circle:hover::after {
    background: linear-gradient(135deg, var(--clr-gradient-blue) 50%, var(--clr-gradient-purple) 100%); 
}

.item-name {
    background: inherit;
    width: 100%;
}

.item > button {
    width: 1.125rem;
    height: 1.125rem;
    background: inherit;
    background-image: url(./images/icon-cross.svg);
    background-repeat: no-repeat;
    background-position: center center;
    visibility: hidden;
}

.item:hover > .item-name {
    color: var(--clr-item--hover);
}

.item:hover > button {
    visibility: visible;
}

.item.completed > .item-name {
    text-decoration: line-through;
    color: var(--clr-item--completed);
}

.item.dragging > * {
    opacity: 0;
}

/* footer must be outsid ethe list (e.g. ul) element to avoid (re)painting when list is updated */
.footer {
    font-size: var(--fs-300);
    color: var(--clr-footer--text);
    padding: 1rem 1rem;
    position: relative;
}

.footer button:hover {
    color: var(--clr-item--text);
}

.items-left {}

.filter {
    display: flex;
    align-items: center;
    gap: 1rem;
    background: var(--clr-bg--list);
}

.filter > button {
}

.filter .active {
    color: var(--clr-active--text)
}

.clear {}

.drag-n-drop {
    font-size: var(--fs-300);
    text-align: center;
    color: var(--clr-footer--text);
    padding-block: 1.5rem;
}

/* override defaults for mobile using max-width */
@media (max-width: 475px) {
    .page--container {
        /* nullify the custom properity to use the fallback option (e.g. mobile version) */
        --bg-image: unset;
    }
    
    .filter {
        position: absolute;
        inset: 0;
        transform: translate(0, calc(100% + 1rem));
        justify-content: center;
        border-radius: var(--border-radius);
    }
    
    .drag-n-drop {
        padding-top: calc(1.5rem + 1rem + 53px);
        padding-bottom: 1.5rem;
    }

}
@media (max-width: 850px) {
}
@media (max-width: 550px) {
}

